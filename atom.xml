<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="https://www.w3.org/2005/Atom">
  <title>Garen&#39;s Blog</title>
  
  <subtitle>Keep coding,Keep running</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.garenhou.com/"/>
  <updated>2019-11-25T06:58:38.125Z</updated>
  <id>http://www.garenhou.com/</id>
  
  <author>
    <name>Garen Hou</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【数据结构与算法】链表及相关问题</title>
    <link href="http://www.garenhou.com/2019/Structure-and-Algorithm-Linkedlist/"/>
    <id>http://www.garenhou.com/2019/Structure-and-Algorithm-Linkedlist/</id>
    <published>2019-10-25T07:35:22.000Z</published>
    <updated>2019-11-25T06:58:38.125Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://img.garenhou.com/diagram.jpeg&quot; alt=&quot;链表&quot;&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;链表&lt;/strong&gt;(Linked list)相关算法题在面试中很常见，本文将详细介绍链表相对复杂的操作，并用Java语言实现，其中包括：建立带环链表（区别于循环链表）、判断链表是否带环，求得环入口结点及环的长度；判断两个链表是否相交、求得交点；查找倒数第K个结点；反转链表。在LeetCode和剑指Offer中出现的链表问题，基本基于这几个操作。（反正我是一文搞懂啦~）其他简单的操作实现在文后链接中。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;学习目的&lt;/strong&gt;：掌握链表相关操作，熟练使用&lt;strong&gt;双指针法&lt;/strong&gt;(快慢指针法)&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Structure and algorithm" scheme="http://www.garenhou.com/categories/Structure-and-algorithm/"/>
    
      <category term="Linked list" scheme="http://www.garenhou.com/categories/Structure-and-algorithm/Linked-list/"/>
    
    
      <category term="Structure and algorithm" scheme="http://www.garenhou.com/tags/Structure-and-algorithm/"/>
    
      <category term="Linked list" scheme="http://www.garenhou.com/tags/Linked-list/"/>
    
      <category term="Java" scheme="http://www.garenhou.com/tags/Java/"/>
    
  </entry>
  
</feed>
