<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="https://www.w3.org/2005/Atom">
  <title>Garen&#39;s Blog</title>
  
  <subtitle>Keep coding,Keep running</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.garenhou.com/"/>
  <updated>2020-08-13T08:49:22.581Z</updated>
  <id>http://www.garenhou.com/</id>
  
  <author>
    <name>Garen Hou</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JVM之动态计算对象年龄的规则</title>
    <link href="http://www.garenhou.com/2020/jvm-dynamic-age-algorithm%20/"/>
    <id>http://www.garenhou.com/2020/jvm-dynamic-age-algorithm%20/</id>
    <published>2020-03-13T07:45:11.000Z</published>
    <updated>2020-08-13T08:49:22.581Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在学习JVM的过程中，发现一些文章在讲Java堆中对象从新生代晋升到老年代的年龄阈值，也就是对象提升(Promotion)规则没有交代得很清楚，这里就再来理解一下&lt;strong&gt;动态对象年龄计算规则&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java虚拟机" scheme="http://www.garenhou.com/categories/Java%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
      <category term="垃圾回收" scheme="http://www.garenhou.com/categories/Java%E8%99%9A%E6%8B%9F%E6%9C%BA/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/"/>
    
    
      <category term="JVM" scheme="http://www.garenhou.com/tags/JVM/"/>
    
      <category term="垃圾回收" scheme="http://www.garenhou.com/tags/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/"/>
    
  </entry>
  
  <entry>
    <title>MySQL知识点总结</title>
    <link href="http://www.garenhou.com/2020/mysql-summary/"/>
    <id>http://www.garenhou.com/2020/mysql-summary/</id>
    <published>2020-03-09T02:33:07.000Z</published>
    <updated>2020-08-09T02:46:06.900Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;MySQL学习后整理的基础知识会汇总，可随时查看，做复习用。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="http://www.garenhou.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="http://www.garenhou.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://www.garenhou.com/tags/MySQL/"/>
    
      <category term="数据库" scheme="http://www.garenhou.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="计算机基础知识" scheme="http://www.garenhou.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>【数据结构与算法】链表及相关问题</title>
    <link href="http://www.garenhou.com/2019/Structure-and-Algorithm-Linkedlist/"/>
    <id>http://www.garenhou.com/2019/Structure-and-Algorithm-Linkedlist/</id>
    <published>2019-10-25T07:35:22.000Z</published>
    <updated>2019-12-26T08:45:22.285Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://img.garenhou.com/diagram.jpeg&quot; alt=&quot;链表&quot;&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;链表&lt;/strong&gt;(Linked list)相关算法题在面试中很常见，本文将详细介绍链表相对复杂的操作，并用Java语言实现，其中包括：建立带环链表（区别于循环链表）、判断链表是否带环，求得环入口结点及环的长度；判断两个链表是否相交、求得交点；查找倒数第K个结点；反转链表。在LeetCode和剑指Offer中出现的链表问题，基本基于这几个操作。（反正我是一文搞懂啦~）其他简单的操作实现在文后链接中。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;学习目的&lt;/strong&gt;：掌握链表相关操作，熟练使用&lt;strong&gt;双指针法&lt;/strong&gt;(快慢指针法)&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Structure and algorithm" scheme="http://www.garenhou.com/categories/Structure-and-algorithm/"/>
    
      <category term="Linked list" scheme="http://www.garenhou.com/categories/Structure-and-algorithm/Linked-list/"/>
    
    
      <category term="Structure and algorithm" scheme="http://www.garenhou.com/tags/Structure-and-algorithm/"/>
    
      <category term="Linked list" scheme="http://www.garenhou.com/tags/Linked-list/"/>
    
      <category term="Java" scheme="http://www.garenhou.com/tags/Java/"/>
    
  </entry>
  
</feed>
